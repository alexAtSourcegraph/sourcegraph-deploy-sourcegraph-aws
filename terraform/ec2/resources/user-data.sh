#!/usr/bin/env bash

# Update system
yum yum clean all
yum update -y
yum upgrade

# Add docker to packages list
amazon-linux-extras install docker

yum install -y \
    docker \
    git \
    make \
    nano \
    python3 \
    perl-Switch \
    perl-DateTime \
    perl-Sys-Syslog \
    perl-LWP-Protocol-https \
    perl-Digest-SHA.x86_64


# Install docker compose
ln -s /usr/local/bin/pip3 /usr/bin/pip3
pip3 install pip setuptools --upgrade
pip3 install docker-compose
ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

# start and make docker start on boot
service docker start
systemctl enable docker
usermod -a -G docker ec2-user

# Install the memory and disk monitoring metrics and send to Cloud Watch
yum install perl-Switch perl-DateTime perl-Sys-Syslog perl-LWP-Protocol-https -y
curl https://aws-cloudwatch.s3.amazonaws.com/downloads/CloudWatchMonitoringScripts-1.2.2.zip -O
unzip CloudWatchMonitoringScripts-1.2.2.zip
rm CloudWatchMonitoringScripts-1.2.2.zip
cd aws-scripts-mon
(crontab -l && echo "*/5 * * * * /aws-scripts-mon/mon-put-instance-data.pl --mem-used-incl-cache-buff --mem-util --disk-space-util --disk-path=/ --from-cron") | crontab -

docker network create sourcegraph

# Initialize the db and files
docker container run \
    --name sourcegraph \
    -d \
    -v ~/.sourcegraph/config:/etc/sourcegraph \
    -v ~/.sourcegraph/data:/var/opt/sourcegraph \
    sourcegraph/server:3.0.1

# Wait long enough for Sourcegraph to initialize, then kill the container
sleep 20
docker container stop rm sourcegraph
docker container rm sourcegraph

## Generate certs and replace existing nginx
openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 \
    -subj "/C=US/ST=CA/L=San Francisco/O=Sourcegraph/CN=sourcegraph" \
    -keyout ~/.sourcegraph/config/sourcegraph.key -out ~/.sourcegraph/config/sourcegraph.crt

# TODO (ryan): update generated nginx.conf file
cat >~/.sourcegraph/config/nginx.conf <<EOL
# This config was generated by Sourcegraph.
# You can adjust the configuration to add additional TLS or HTTP features.
# Read more at https://docs.sourcegraph.com/admin/nginx

error_log stderr;
pid /var/run/nginx.pid;

# Do not remove. The contents of sourcegraph_main.conf can change between
# versions and may include improvements to the configuration.
include nginx/sourcegraph_main.conf;

events {
}

http {
    server_tokens off;

    # Do not remove. The contents of sourcegraph_http.conf can change between
    # versions and may include improvements to the configuration.
    include nginx/sourcegraph_http.conf;

    access_log off;
    upstream backend {
        # Do not remove. The contents of sourcegraph_backend.conf can change
        # between versions and may include improvements to the configuration.
        include nginx/sourcegraph_backend.conf;
    }

    server {
        # Do not remove. The contents of sourcegraph_server.conf can change
        # between versions and may include improvements to the configuration.
        include nginx/sourcegraph_server.conf;

        listen 7080 ssl;

        ssl_certificate     sourcegraph.crt;
        ssl_certificate_key sourcegraph.key;

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $$http_host;
            proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $$scheme;
        }
    }
}

EOL

# Ruu the real Docker container, will start on boot
docker container run \
    --name sourcegraph \
    -d \
    --restart always \
    \
    --network sourcegraph \
    --hostname sourcegraph \
    --network-alias sourcegraph \
    \
    -p 7080:7080 \
    -p 80:7080 \
    -p 443:7080 \
    -p 2633:2633 \
    \
    -v ~/.sourcegraph/config:/etc/sourcegraph \
    -v ~/.sourcegraph/data:/var/opt/sourcegraph \
    \
    sourcegraph/server:3.0.1

# Reboot for ec2-user in docker group to take effect
reboot
